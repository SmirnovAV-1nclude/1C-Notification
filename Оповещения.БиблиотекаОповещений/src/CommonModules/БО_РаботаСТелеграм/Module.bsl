
#Область ПрограммныйИнтерфейс



#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область МетодыТелеграм

// Параметры взаимодействия.
// 
// Параметры:
//  Токен - Неопределено, Строка - Токен
//  ИдентификаторПолучатель - Неопределено, Строка - Идентификатор получатель
// 
// Возвращаемое значение:
//  Структура - Параметры взаимодействия:
// * Токен - Неопределено, Строка - 
// * ИдентификаторПолучатель - Неопределено, Строка - 
Функция ПараметрыВзаимодействия(Токен = Неопределено, ИдентификаторПолучатель = Неопределено) Экспорт
	
	ПараметрыВзаимодействия = Новый Структура();
	ПараметрыВзаимодействия.Вставить("Токен", Токен);
	ПараметрыВзаимодействия.Вставить("ИдентификаторПолучатель", ИдентификаторПолучатель);
	
	Возврат ПараметрыВзаимодействия;
	
КонецФункции

// Send message.
// 
// Параметры:
//  ПараметрыВзаимодействия - Структура - См. ПараметрыВзаимодействия()
//  ТекстСообщения - Строка - Текст сообщения
//  Сессия - Неопределено, Структура - См. КоннекторHTTP.СоздатьСессию()
// 
// Возвращаемое значение:
// 	Соответствие
//  
Функция sendMessage(ПараметрыВзаимодействия, ТекстСообщения, Сессия = Неопределено) Экспорт
	
	ИнициализироватьСессию(Сессия);
	
	URL = СтрШаблон("%1bot%2/sendMessage", АдресРесурса(), ПараметрыВзаимодействия.Токен);
	
	ПараметрыЗапроса = Новый Структура();
	ПараметрыЗапроса.Вставить("parse_mode", "MarkdownV2");
	ПараметрыЗапроса.Вставить("chat_id", ПараметрыВзаимодействия.ИдентификаторПолучатель);
	ПараметрыЗапроса.Вставить("text", ТекстСообщения);
	
	Возврат КоннекторHTTP.GetJson(URL, ПараметрыЗапроса, Неопределено, Сессия);	
	
КонецФункции

// Send photo.
// 
// Параметры:
//  ПараметрыВзаимодействия - Структура - См. ПараметрыВзаимодействия()
//  Файл - Структура - Описание файла
//  	* Данные - ДвоичныеДанные - 
//  	* ИмяФайла - Строка - Имя отправляемого файла
//  	* Расширение - Строка - Расширение без точки
//  ТекстовоеОписание - Строка - Подпись к отправляемой фотографии
//  Сессия - Неопределено, Структура - См. КоннекторHTTP.СоздатьСессию()
// 
// Возвращаемое значение:
// 	Соответствие
//  
Функция sendPhoto(ПараметрыВзаимодействия, Файл, ТекстовоеОписание = "", Сессия = Неопределено) Экспорт
	
	ИнициализироватьСессию(Сессия);
	
	URL = СтрШаблон("%1bot%2/sendPhoto", АдресРесурса(), ПараметрыВзаимодействия.Токен);
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("chat_id", ПараметрыВзаимодействия.ИдентификаторПолучатель);
	ПараметрыЗапроса.Вставить("parse_mode", "MarkdownV2");
	ПараметрыЗапроса.Вставить("caption", ТекстовоеОписание);
	
	ДополнительныеПараметры = КоннекторHTTP.НовыеПараметры();
	ДополнительныеПараметры.Данные = ПараметрыЗапроса;
	ДополнительныеПараметры.Файлы = ОписаниеФайла(Файл, "photo");
	
	Возврат КоннекторHTTP.PostJson(URL, Неопределено, ДополнительныеПараметры, Сессия);
	
КонецФункции

// Send audio.
// 
// Параметры:
//  ПараметрыВзаимодействия - Структура - См. ПараметрыВзаимодействия()
//  Файл - Структура - Описание файла
//  	* Данные - ДвоичныеДанные - 
//  	* ИмяФайла - Строка - Имя отправляемого файла
//  	* Расширение - Строка - Расширение без точки
//  ТекстовоеОписание - Строка - Текстовое описание
//  Сессия - Неопределено, Структура - См. КоннекторHTTP.СоздатьСессию()
// 
// Возвращаемое значение:
// 	Соответствие
//  
Функция sendAudio(ПараметрыВзаимодействия, Файл, ТекстовоеОписание = "", Сессия = Неопределено) Экспорт
	
	ИнициализироватьСессию(Сессия);
	
	URL = СтрШаблон("%1bot%2/sendAudio", АдресРесурса(), ПараметрыВзаимодействия.Токен);
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("chat_id", ПараметрыВзаимодействия.ИдентификаторПолучатель);
	ПараметрыЗапроса.Вставить("parse_mode", "MarkdownV2");
	ПараметрыЗапроса.Вставить("caption", ТекстовоеОписание);
	
	ДополнительныеПараметры = КоннекторHTTP.НовыеПараметры();
	ДополнительныеПараметры.Данные = ПараметрыЗапроса;
	ДополнительныеПараметры.Файлы = ОписаниеФайла(Файл, "audio");
	
	Возврат КоннекторHTTP.PostJson(URL, Неопределено, ДополнительныеПараметры, Сессия);
	
КонецФункции

// Send document.
// 
// Параметры:
//  ПараметрыВзаимодействия - Структура - См. ПараметрыВзаимодействия()
//  Файл - Структура - Описание файла
//  	* Данные - ДвоичныеДанные - 
//  	* ИмяФайла - Строка - Имя отправляемого файла
//  	* Расширение - Строка - Расширение без точки
//  ТекстовоеОписание - Строка - Текстовое описание
//  Сессия - Неопределено, Структура - См. КоннекторHTTP.СоздатьСессию()
// 
// Возвращаемое значение:
// 	Соответствие 
//  
Функция sendDocument(ПараметрыВзаимодействия, Файл, ТекстовоеОписание = "", Сессия = Неопределено) Экспорт
	
	ИнициализироватьСессию(Сессия);
	
	URL = СтрШаблон("%1bot%2/sendDocument", АдресРесурса(), ПараметрыВзаимодействия.Токен);
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("chat_id", ПараметрыВзаимодействия.ИдентификаторПолучатель);
	ПараметрыЗапроса.Вставить("parse_mode", "MarkdownV2");
	ПараметрыЗапроса.Вставить("caption", ТекстовоеОписание);
	
	ДополнительныеПараметры = КоннекторHTTP.НовыеПараметры();
	ДополнительныеПараметры.Данные = ПараметрыЗапроса;
	ДополнительныеПараметры.Файлы = ОписаниеФайла(Файл, "document");
	
	Возврат КоннекторHTTP.PostJson(URL, Неопределено, ДополнительныеПараметры, Сессия);
	
КонецФункции

// Send video.
// 
// Параметры:
//  ПараметрыВзаимодействия - Структура - См. ПараметрыВзаимодействия()
//  Файл - Структура - Описание файла
//  	* Данные - ДвоичныеДанные - 
//  	* ИмяФайла - Строка - Имя отправляемого файла
//  	* Расширение - Строка - Расширение без точки
//  ТекстовоеОписание - Строка - Текстовое описание
//  Сессия - Неопределено, Структура - См. КоннекторHTTP.СоздатьСессию()
// 
// Возвращаемое значение:
// 	Соответствие
//  
Функция sendVideo(ПараметрыВзаимодействия, Файл, ТекстовоеОписание = "", Сессия = Неопределено) Экспорт
	
	ИнициализироватьСессию(Сессия);
	
	URL = СтрШаблон("%1bot%2/sendVideo", АдресРесурса(), ПараметрыВзаимодействия.Токен);
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("chat_id", ПараметрыВзаимодействия.ИдентификаторПолучатель);
	ПараметрыЗапроса.Вставить("parse_mode", "MarkdownV2");
	ПараметрыЗапроса.Вставить("caption", ТекстовоеОписание);
	
	ДополнительныеПараметры = КоннекторHTTP.НовыеПараметры();
	ДополнительныеПараметры.Данные = ПараметрыЗапроса;
	ДополнительныеПараметры.Файлы = ОписаниеФайла(Файл, "video");
	
	Возврат КоннекторHTTP.PostJson(URL, Неопределено, ДополнительныеПараметры, Сессия);
	
КонецФункции

// Send media group.
// 
// Параметры:
//  ПараметрыВзаимодействия - Структура - См. ПараметрыВзаимодействия()
//  Файлы - Массив - 
//  * Структура - Описание файла
//  	** Данные - ДвоичныеДанные - 
//  	** ИмяФайла - Строка - Имя отправляемого файла
//  	** Расширение - Строка - Расширение без точки  
//  ТекстовоеОписание - Строка - Текстовое описание
//  Сессия - Неопределено, Структура - См. КоннекторHTTP.СоздатьСессию()
// 
// Возвращаемое значение:
// 	Соответствие
//  
Функция sendMediaGroup(ПараметрыВзаимодействия, Файлы, ТекстовоеОписание = "", Сессия = Неопределено) Экспорт

	ИнициализироватьСессию(Сессия);

	URL = СтрШаблон("%1bot%2/sendMediaGroup", АдресРесурса(), ПараметрыВзаимодействия.Токен);

	ОписаниеМедиа = Медиа(Файлы, ТекстовоеОписание);

	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("chat_id", ПараметрыВзаимодействия.ИдентификаторПолучатель);
	ПараметрыЗапроса.Вставить("media", ЗаписатьЗначениеJSON(ОписаниеМедиа.КоллекцияМедиа));

	ДополнительныеПараметры = КоннекторHTTP.НовыеПараметры();
	ДополнительныеПараметры.Данные = ПараметрыЗапроса;
	ДополнительныеПараметры.Файлы = ОписаниеМедиа.КоллекцияФайлов;

	Возврат КоннекторHTTP.PostJson(URL, Неопределено, ДополнительныеПараметры, Сессия);

КонецФункции

#КонецОбласти

// Адрес ресурса.
// 
// Возвращаемое значение:
//  Строка - Адрес ресурса
Функция АдресРесурса() 

	Возврат "https://api.telegram.org/";

КонецФункции

// Инициализировать сессию.
// 
// Параметры:
//  Сессия - Структура, Неопределено -  
Процедура ИнициализироватьСессию(Сессия)
	
	Если Сессия = Неопределено Тогда
		Сессия = КоннекторHTTP.СоздатьСессию();	
	КонецЕсли;
	
КонецПроцедуры

Функция ОписаниеФайла(Файл, Имя)
	
	ОписаниеФайла = Новый Структура("Данные,ИмяФайла,Имя");
	ЗаполнитьЗначенияСвойств(ОписаниеФайла, Файл);
	ОписаниеФайла.Имя = Имя;
	
	Возврат ОписаниеФайла;
	
КонецФункции

Функция Медиа(Файлы, ТекстовоеОписание)
	
	КоллекцияМедиа = Новый Массив;
	КоллекцияФайлов = Новый Массив;
	
	РасширенияФото = "png dib jpeg jpg jpe jfif bmp";
	РасширенияАудио = "mp3 m4a";
	РасширенияВидео = "mp4";
	
	СчетчикАттачей = 1;
	
	Для Каждого Файл Из Файлы Цикл
		
		ОписаниеФайла = Новый Структура;
		ОписаниеФайла.Вставить("Имя", Формат(СчетчикАттачей, "ЧГ=0"));
		ОписаниеФайла.Вставить("ИмяФайла", СтрШаблон("%1.%2", Файл.ИмяФайла, Файл.Расширение));
		ОписаниеФайла.Вставить("Данные", Файл.Данные);
		
		КоллекцияФайлов.Добавить(ОписаниеФайла);
		
		ОписаниеМедиа = Новый Структура("media", СтрШаблон("attach://%1", Строка(СчетчикАттачей)));
		Если СтрНайти(РасширенияФото, Файл.Расширение) Тогда
			ОписаниеМедиа.Вставить("type", "photo");	
		ИначеЕсли СтрНайти(РасширенияАудио, Файл.Расширение) Тогда 
			ОписаниеМедиа.Вставить("type", "audio");
		ИначеЕсли СтрНайти(РасширенияВидео, Файл.Расширение) Тогда 
			ОписаниеМедиа.Вставить("type", "video");
		Иначе
			ОписаниеМедиа.Вставить("type", "document");		
		КонецЕсли;
		
		КоллекцияМедиа.Добавить(ОписаниеМедиа);
		
		СчетчикАттачей = СчетчикАттачей + 1;

	КонецЦикла;
	
	Если КоллекцияМедиа.Количество() Тогда
		КоллекцияМедиа[КоллекцияМедиа.ВГраница()].Вставить("caption", ТекстовоеОписание);
		КоллекцияМедиа[КоллекцияМедиа.ВГраница()].Вставить("parse_mode", "MarkdownV2");
	КонецЕсли;
	
	Медиа = Новый Структура;
	Медиа.Вставить("КоллекцияМедиа", КоллекцияМедиа);
	Медиа.Вставить("КоллекцияФайлов", КоллекцияФайлов);
	
	Возврат Медиа;
	
КонецФункции

#КонецОбласти
